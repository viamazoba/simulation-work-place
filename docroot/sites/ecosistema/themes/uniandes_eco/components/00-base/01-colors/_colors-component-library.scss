@use 'colors-used' as *;

// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;

  &__list {
    display: flex;
    flex-wrap: wrap;
    margin: 0 0 2rem;
    padding: 0;
    gap: 2.5rem;
  }

  &__item {
    transition: all 0.4s;
    width: 100%;
    height: 3.438rem;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    border-radius: 0.3rem;
  }

  &__content,
  &__content-dark {
    transition: all 0.4s;
    width: 30%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: start;
    padding: 0.5rem;
    border-radius: 0.5rem;
    box-shadow: 0px 5px 5px -5px clr(uniandes-color-brand-black);

    &__details {
      padding-top: 0.5rem;

      &--subtitle,
      &--variable {
        font-weight: bold;
      }
    }
  }

  &__content-dark {
    background-color: clr(uniandes-color-brand-black);
    color: clr(uniandes-color-neutro-20);
  }
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color(
  $color,
  $text-primary: accent-high,
  $text-secondary: muted
) {
  @if (lightness($color) > 50) {
    @return clr($text-primary);
  } @else {
    @return clr($text-secondary);
  }
}

@each $name, $color in $mainColors {
  .cl-colors__item--main {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $neutralColors {
  .cl-colors__item--neutral {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $textColorsLight {
  .cl-colors__item--text-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $semanticColorsLight {
  .cl-colors__item--semantic-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $backgroundColorsLight {
  .cl-colors__item--background-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $secondaryColorsLight {
  .cl-colors__item--secondary-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveBackgroundLight {
  .cl-colors__item--interactive-background-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveContentLight {
  .cl-colors__item--interactive-content-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveBorderLight {
  .cl-colors__item--interactive-border-light {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $textColorsDark {
  .cl-colors__item--text-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $semanticColorsDark {
  .cl-colors__item--semantic-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $backgroundColorsDark {
  .cl-colors__item--background-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $secondaryColorsDark {
  .cl-colors__item--secondary-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveBackgroundDark {
  .cl-colors__item--interactive-background-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveContentDark {
  .cl-colors__item--interactive-content-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

@each $name, $color in $interactiveBorderDark {
  .cl-colors__item--interactive-border-dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors__item--default {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

// Style dark color swatches
@each $name, $color in $darkColors {
  .cl-colors__item--dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color, muted, accent-high);
    }
  }
}

// Colors Ecosystem
@each $name, $color in $ecosystemColors {
  .cl-colors__item--text-ecosystem {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}
